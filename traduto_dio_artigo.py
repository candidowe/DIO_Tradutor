# -*- coding: utf-8 -*-
"""traduto_dio_artigo.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RlfQWB1PdpWsTTgbwmJqoAvA8pyGz0Em
"""

!pip install requests beautifulsoup4 openai langchain-openai

import requests
from bs4 import BeautifulSoup

def extract_text_from_url(url):
    response = requests.get(url)

    if response.status_code == 200:
      soup = BeautifulSoup(response.text, 'html.parser')
      for script_or_style in soup(["script", "style"]):
        script_or_style.decompose()
      text = soup.get_text(separator='')
      #Limpar texto
      linhas = (line.strip() for line in text.splitlines())
      part = (phrase.strip() for line in linhas for phrase in line.split("  "))
      texto_limpo = '\n'.join(part for part in part if part)
      return texto_limpo


    else:
      print(f"Failed to retrieve the webpage. Status code: {response.status_code}")
      return None



    text = soup.get_text()
    return text

extract_text_from_url('https://dev.to/edgaras/ethereum-integration-in-php-for-wallets-and-transfers-11d2')

from langchain_openai.chat_models.azure import AzureChatOpenAI

client = AzureChatOpenAI(
    azure_endpoint="https://wesll-mgfsfu1p-swedencentral.cognitiveservices.azure.com/",
    api_key="BWL8JF0QzjfCqSXcHxsVSNxbgDnocv5sxZXOdqr76RN8iQUSkpzxJQQJ99BJACfhMk5XJ3w3AAAAACOGNTlW",
    api_version="2024-12-01-preview",
    deployment_name="gpt-4.1-mini",
    max_retries=0

)

def translate_article(text,lang):
  messages =[
      ("system", "VocÃª atua como tradutor de textos"),
      ("user", f"Traduza o {text} para o idioma {lang} e responda em markdown")
  ]
  response = client.invoke(messages)
  print(response.content)
  return response.content

translate_article("Ethereum Integration in PHP for Wallets and Transfers", "portugues")

url = 'https://dev.to/edgaras/ethereum-integration-in-php-for-wallets-and-transfers-11d2'
text = extract_text_from_url(url)
article = translate_article(text, "pt-br")

print(article)